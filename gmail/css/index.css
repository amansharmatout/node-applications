* {
  margin: 0;
  padding: 0;
  font-family: "Shippori Mincho", serif;
  background-color: red;
}
.img-fluid {
  height: 400px;
  object-position: center;
  object-fit: cover;
}
section{
  margin-top: 50px;
}

/* 
SELECT customers.customerName,products.productName FROM orders LEFT JOIN customers ON orders.customerNumber = customers.customerNumber left join orderdetails on orders.orderNumber=orderdetails.orderNumber left join products on orderdetails.productCode=products.productCode;

select customers.customerNumber, orders.orderNumber ,payments.checkNumber,orderdetails.priceEach, products.productCode,productlines.productLine,employees.firstName,offices.city
     from customers inner join payments on customers.customerNumber=payments.customerNumber inner join orders on customers.customerNumber=orders.customerNumber inner join orderdetails on orderdetails.orderNumber=orders.orderNumber inner join products on products.productCode=orderdetails.productCode inner join productlines on productlines.productLine=products.productLine
     inner join employees on customers.salesRepEmployeeNumber=employees.employeeNumber inner join offices on offices.officeCode=employees.officeCode;




     SELECT customers.customerName,max(products.productName) 
     FROM orders LEFT JOIN customers ON orders.customerNumber = 
     customers.customerNumber left join orderdetails on 
     orders.orderNumber=orderdetails.orderNumber left join 
     products on orderdetails.productCode=products.productCode 
     group by customerName;

     
     SELECT customers.customerName as customer,sum(orderdetails.priceEach*orderdetails.quantityOrdered) as sum,orders.orderDate FROM orders LEFT JOIN customers ON orders.customerNumber = customers.customerNumber left join orderdetails on orders.orderNumber=orderdetails.orderNumber left join products on orderdetails.productCode=products.productCode group by customerName,orderDate;


     SELECT customers.customerName as customer,sum(orderdetails.priceEach*orderdetails.quantityOrdered) as sum,month(orderDate) as month  FROM orders LEFT JOIN customers ON orders.customerNumber = customers.customerNumber left join orderdetails on orders.orderNumber=orderdetails.orderNumber left join products on orderdetails.productCode=products.productCode group by customerName,month(orderdate);


     SELECT customers.customerName,products.productName 
          FROM orders LEFT JOIN customers ON orders.customerNumber = 
          customers.customerNumber left join orderdetails on 
          orders.orderNumber=orderdetails.orderNumber left join 
          products on orderdetails.productCode=products.productCode where customers.customerName = 'Kelly's Gift Shop';



          db.movie.insert({ _id: 20, devname: "John Wick", tools: "Visual Studio", born: 1948 })
          db.movie.insert({ _id: 21, devname: "Ganesh Roy", tools: "Net Beans", born: 1945 })
          db.movie.insert({ _id: 22, devname: "Deeksha Raul", tools: "Unity 3D", born: 1954 })
           db.mycol.aggregate([{$group : {_id : "$by_user", num_tutorial : {$sum : 1}}}])
           [            {                "_id" : 1,                "name" : {                    "first" : "John",  "last" : "Backus"                },                "birth" : ISODate("1924-12-03T05:00:00Z"),                "death" : ISODate("2007-03-17T04:00:00Z"),                "contribs" : [                    "Fortran",                    "ALGOL",                    "Backus-Naur Form",                    "FP"                ],                "awards" : [                    {                        "award" : "W.W. McDowell Award",                        "year" : 1967,                        "by" : "IEEE Computer Society"                    },                    {                        "award" : "National Medal of Science",                        "year" : 1975,                        "by" : "National Science Foundation"                    },                    {                        "award" : "Turing Award",                        "year" : 1977,                        "by" : "ACM"                    },                    {                        "award" : "Draper Prize",                        "year" : 1993,                        "by" : "National Academy of Engineering"                    }                ]            },            {                "_id" : ObjectId("51df07b094c6acd67e492f41"),                "name" : {                    "first" : "John",                    "last" : "McCarthy"                },                "birth" : ISODate("1927-09-04T04:00:00Z"),                "death" : ISODate("2011-12-24T05:00:00Z"),                "contribs" : [                    "Lisp",                    "Artificial Intelligence",                    "ALGOL"                ],                "awards" : [                    {                        "award" : "Turing Award",                        "year" : 1971,                        "by" : "ACM"                    },                    {                        "award" : "Kyoto Prize",                        "year" : 1988,                        "by" : "Inamori Foundation"                    },                    {                        "award" : "National Medal of Science",                        "year" : 1990,                        "by" : "National Science Foundation"                    }                ]            },            {                "_id" : 3,                "name" : {                    "first" : "Grace",                    "last" : "Hopper"                },                "title" : "Rear Admiral",                "birth" : ISODate("1906-12-09T05:00:00Z"),                "death" : ISODate("1992-01-01T05:00:00Z"),                "contribs" : [                    "UNIVAC",                    "compiler",                    "FLOW-MATIC",                    "COBOL"                ],                "awards" : [                    {                        "award" : "Computer Sciences Man of the Year",                        "year" : 1969,                        "by" : "Data Processing Management Association"                    },                    {                        "award" : "Distinguished Fellow",                        "year" : 1973,                        "by" : " British Computer Society"                    },                    {                        "award" : "W. W. McDowell Award",                        "year" : 1976,                        "by" : "IEEE Computer Society"                    },                    {                        "award" : "National Medal of Technology",                        "year" : 1991,                        "by" : "United States"                    }                ]            },            {                "_id" : 4,                "name" : {                    "first" : "Kristen",                    "last" : "Nygaard"                },                "birth" : ISODate("1926-08-27T04:00:00Z"),                "death" : ISODate("2002-08-10T04:00:00Z"),                "contribs" : [                    "OOP",                    "Simula"                ],                "awards" : [                    {                        "award" : "Rosing Prize",                        "year" : 1999,                        "by" : "Norwegian Data Association"                    },                    {                        "award" : "Turing Award",                        "year" : 2001,                        "by" : "ACM"                    },                    {                        "award" : "IEEE John von Neumann Medal",                        "year" : 2001,                        "by" : "IEEE"                    }                ]            },            {                "_id" : 5,                "name" : {                    "first" : "Ole-Johan",                    "last" : "Dahl"                },                "birth" : ISODate("1931-10-12T04:00:00Z"),                "death" : ISODate("2002-06-29T04:00:00Z"),                "contribs" : [                    "OOP",                    "Simula"                ],                "awards" : [                    {                        "award" : "Rosing Prize",                        "year" : 1999,                        "by" : "Norwegian Data Association"                    },                    {                        "award" : "Turing Award",                        "year" : 2001,                        "by" : "ACM"                    },                    {                        "award" : "IEEE John von Neumann Medal",                        "year" : 2001,                        "by" : "IEEE"                    }                ]            },            {                "_id" : 6,                "name" : {                    "first" : "Guido",                    "last" : "van Rossum"                },                "birth" : ISODate("1956-01-31T05:00:00Z"),                "contribs" : [                    "Python"                ],                "awards" : [                    {                        "award" : "Award for the Advancement of Free Software",                        "year" : 2001,                        "by" : "Free Software Foundation"                    },                    {                        "award" : "NLUUG Award",                        "year" : 2003,                        "by" : "NLUUG"                    }                ]            },            {                "_id" : ObjectId("51e062189c6ae665454e301d"),                "name" : {                    "first" : "Dennis",                    "last" : "Ritchie"                },                "birth" : ISODate("1941-09-09T04:00:00Z"),                "death" : ISODate("2011-10-12T04:00:00Z"),                "contribs" : [                    "UNIX",                    "C"                ],                "awards" : [                    {                        "award" : "Turing Award",                        "year" : 1983,                        "by" : "ACM"                    },                    {                        "award" : "National Medal of Technology",                        "year" : 1998,                        "by" : "United States"                    },                    {                        "award" : "Japan Prize",                        "year" : 2011,                        "by" : "The Japan Prize Foundation"                    }                ]            },            {                "_id" : 8,                "name" : {                    "first" : "Yukihiro",                    "aka" : "Matz",                    "last" : "Matsumoto"                },                "birth" : ISODate("1965-04-14T04:00:00Z"),                "contribs" : [                    "Ruby"                ],                "awards" : [                    {                        "award" : "Award for the Advancement of Free Software",                        "year" : "2011",                        "by" : "Free Software Foundation"                    }                ]            },            {                "_id" : 9,                "name" : {                    "first" : "James",                    "last" : "Gosling"                },                "birth" : ISODate("1955-05-19T04:00:00Z"),                "contribs" : [                    "Java"                ],                "awards" : [                    {                        "award" : "The Economist Innovation Award",                        "year" : 2002,                        "by" : "The Economist"                    },                    {                        "award" : "Officer of the Order of Canada",                        "year" : 2007,                        "by" : "Canada"                    }                ]            },            {                "_id" : 10,                "name" : {                    "first" : "Martin",                    "last" : "Odersky"                },                "contribs" : [                    "Scala"                ]            }                  ]



           db.members.aggregate([
               {
                 $lookup:
                 {
                    from:"classes", 
                    localfield:"name", 
                    foreignField:"enrollmentlist" 
                    as:"name"
                  }
                }
              ])

            db.members.aggregate([
   {
      $lookup:
         {
            from: "classes",
            localField: "name",
            foreignField: "enrollmentlist",
            as: "enrollee_info"
        }
   }
])



db.members.aggregate(
   [
     {
       $project:
         {
           year: { $year: "$joined" },
           month: { $month: {date:"$joined",timezone: "+0530"} },
           name:{name:"$name"},
           joined:{joined:"$joined"},
           status:{status:"$status"}
         }
     }
   ]
)
db.members.aggregate(
    [
      {
        $project:
          {
            year: { $year: "$joined" },
            month: { $month: "$joined" },
            day: { $dayOfMonth: "$joined" },
            hour: { $hour: "$joined" },
            minutes: { $minute: "$joined" },
            seconds: { $second: "$joined" },
            milliseconds: { $millisecond: "$joined" },
            dayOfYear: { $dayOfYear: "$djoinedate" },
            dayOfWeek: { $dayOfWeek: "$joined" },
            week: { $week: "$joined" },
            name:{name:"$name"}
          }
      }
    ]
 )

db.members.aggregate([
  {
    { $match : { status : "A" } },{
      $project:{
        name:"$name"
      }
    }
  }
  ])

 db.members.aggregate([{$group : { _id : "$status", count : {$sum : 1}}},{$project:{ status:{_id:"$status"}}}])




 {    
  "_id" : ObjectId("5684f3c454b1fd6926c324fd"),
  "email" : "admin@gmail.com",
  "userId" : "AD",
  "userName" : "admin"
}


{
  "_id" : ObjectId("56d82612b63f1c31cf906003"),
  "userId" : "AD",
  "phone" : "0000000000"
}



{
  "_id" : ObjectId("56d82612b63f1c31cf906003"),
  "userId" : "AD",
  "role" : "admin"
}

,{$project:{}}

db.orders.aggregate([{$lookup:{from:"inventory",localField:"item",foreignField:"sku",as:"item"}},{$replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$fromItems", 0 ] }, "$$ROOT" ] } }},{ $project: { fromItems: 0 } }])

{$replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$fromItems", 0 ] }, "$$ROOT" ] } }}

 db.users.aggregate([

    // Join with user_info table
    {
        $lookup:{
            from: "userinfo",       // other table name
            localField: "userId",   // name of users table field
            foreignField: "userId", // name of userinfo table field
            as: "user_info"         // alias for userinfo table
        }
    },
    {   $unwind:"$user_info" },     // $unwind used for getting data in object or for one record only

    // Join with user_role table
    {
        $lookup:{
            from: "userrole", 
            localField: "userId", 
            foreignField: "userId",
            as: "user_role"
        }
    },
    {   $unwind:"$user_role" },

    // define some conditions here 
    {$match:{$and:[{"userName" : "admin"}]}},

    // define which fields are you want to fetch
    {   
        $project:{
            _id : 1,
            email : 1,
            userName : 1,
            userPhone : "$user_info.phone",
            role : "$user_role.role",
        } 
    }
]);





db.orders.aggregate([
   {
      $lookup: {
         from: "inventory",
         localField: "item",    
         foreignField: "sku",  
         as: "fromItems"
      }
   },
   {
      $replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$fromItems", 0 ] }, "$$ROOT" ] } }
   },
   {
    $lookup: {
       from: "warehouses",
       localField: "item",    
       foreignField: "stock_item",  
       as: "fromItems"
    }
 },
 {
    $replaceRoot: { newRoot: { $mergeObjects: [ { $arrayElemAt: [ "$fromItems", 0 ] }, "$$ROOT" ] } }
 },
   { $project: { fromItems: 0 ,sku:0,item:0} }
])

db.orders.aggregate([
   {
      $lookup: {
         from: "inventory",
         localField: "item",    
         foreignField: "sku",  
         as: "fromItems"
      }
   },
   {
    $lookup: {
       from: "warehouses",
       localField: "item",    
       foreignField: "stock_item",  
       as: "fromItems"
    }
 },
   { $project: { fromItems: 0,warehouse:0} }
])



db.getCollection('users').aggregate([
   {$group: {
       _id:"$eyeColor",
       names: {$push: "$name"}
        }
   }
])

db.foodies.aggregate([{$unwind: { path: "$favoriteFoods", preserveNullAndEmptyArrays: true }},{$group:{ _id: "$favoriteFoods",names:{$push:"$name"}}}]).pretty()


db.employee.aggregate([{$lookup:{from:"employee",localField:"ReportsTo"},foreignField:"EmployeeID",as:"reports"}]).pretty()




 db.foodies.aggregate([{$unwind: { path: "$favoriteFoods", preserveNullAndEmptyArrays: true }},{$group:{ _id: { $ne: [ "$favoriteFoods", "prawns" ] }}}]).pretty()

db.inventory.update( { "carrier.fee": { $lt: 20 } }, { $set: { price: 9.99 } } )


db.inventory.find( { tags: { $in: [ /^be/, /^st/ ] } } )


db.collection.find().sort({ '_id': -1}).limit(1).forEach( 
   function(doc){ 
      lastTimeStamp = doc._id.getTimestamp(); 
   }
)

db.employees.find().sort({ '_id': -1 }).limit(1).forEach(
     function(doc){
         print("record:"+doc._id.getTimestamp());
})
db.employees.findOne({LastName:"Seattle"})._id.getTimestamp() */